|arreglo unJugador movimiento mov c cj i j aux x x1 x2 y|arreglo:=Array new: 4.arreglo at:1 put:(Array new:4).arreglo at:2 put:(Array new:4).arreglo at:3 put:(Array new:4).arreglo at:4 put:(Array new:4).(arreglo at:1) at:1 put: 0.(arreglo at:1) at:2 put: 0.(arreglo at:1) at:3 put: 3.(arreglo at: 1) at: 4 put:0.(arreglo at:2) at:1 put:2.(arreglo at:2) at:2 put:2.(arreglo at:2) at:3 put: 2.(arreglo at:2) at:4 put:0.(arreglo at:3) at:1 put: 1.(arreglo at:3) at:2 put: 0.(arreglo at:3) at:3 put: 2.(arreglo at:3) at:4 put: 0.(arreglo at:4) at:4 put: 4.(arreglo at:4) at:3 put: 2.(arreglo at:4) at:2 put: 1.(arreglo at:4) at:1 put: 1.unJugador := 2.movimiento:= 'H'.i:=1. j:=1. mov:=0. aux:=0.(movimiento == 'H') ifTrue:[	[ i < 5 ] whileTrue: [ 				c:=0. cj:=0.			[ j < 4 ] whileTrue: [							aux:= ((arreglo at:i)at:j).				(aux = unJugador ) ifTrue: [ 							cj:= cj +1.					 ].				(aux = 0) ifTrue: [ 							c:= c +1.					 ].			j:= j+1.			 ]. "fin columnas"			((c+ cj) = 3) ifTrue:[					(i = 1) ifTrue: [ 						x:=i.						x:= x + 1.						j:=j-1.						aux:= ((arreglo at:x)at:j).						(aux = unJugador) ifTrue: [ 										cj:= cj +1 .										(cj ~= 4) ifTrue: [ 											mov:= mov +1].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].						 ]. "fin de la fila 1"					(i = 4) ifTrue: [  						x:= i.						x:= x-1 .						j:=j-1.						aux:= ((arreglo at:x)at:j).						(aux = unJugador) ifTrue: [ 										cj:= cj +1 .										(cj ~= 4) ifTrue: [ 											mov:= mov +1].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].												]. "fin de la fila 2"					((i > 4) & (i < 1)) ifTrue: [ 						x1:= i.						x2:= i.						x1:= x1 + 1.						x2:= x2 - 1.						j:=j-1.						aux:= ((arreglo at:x1)at:j).						(aux = unJugador ) ifTrue: [ 										cj:= cj + 1. 										(cj ~= 4)ifTrue: [ 											mov:= mov + 1 ].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].								aux:= ((arreglo at:x2)at:j).						(aux = unJugador ) ifTrue: [ 										cj:= cj + 1. 										(cj ~= 4)ifTrue: [ 											mov:= mov + 1 ].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].															]. "fin de las filas entremedias"				]. "el fin si de la suma"		i:= i + 1.	j:=1.	 ]. "fin filas"(mov = 0) ifTrue: [ 				i:= 1.				 j:=2. 				c:=0.				cj:=0. 				[ i < 5 ] whileTrue: [ 					[ j  < 5] whileTrue: [ 						aux:= ((arreglo at:i)at:j).						(aux = unJugador ) ifTrue: [ 										cj:= cj +1.					 									].						(aux = 0) ifTrue: [ 										c:= c +1.													 ].					j:= j + 1.													 					]. "fin de las columnas"				((cj + c) = 3) ifTrue: [  					(i = 1) ifTrue: [ 						x:=i.						x:= x + 1.						y:= 4.						aux:= ((arreglo at:x)at:y).						(aux = unJugador) ifTrue: [ 										cj:= cj +1 .										(cj ~= 4) ifTrue: [ 											mov:= mov +1].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].						 ]. "fin de la fila 1"					(i = 4) ifTrue: [  						x:= i.						x:= x-1 .						y:= 4.						aux:= ((arreglo at:x)at:y).						(aux = unJugador) ifTrue: [ 										cj:= cj +1 .										(cj ~= 4) ifTrue: [ 											mov:= mov +1].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].												]. "fin de la fila 2"					((i > 4) & (i < 1)) ifTrue: [ 						x1:= i.						x2:= i.						x1:= x1 + 1.						x2:= x2 - 1.						y:= 4.						aux:= ((arreglo at:x1)at:y).						(aux = unJugador ) ifTrue: [ 										cj:= cj + 1. 										(cj ~= 4)ifTrue: [ 											mov:= mov + 1 ].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].								aux:= ((arreglo at:x2)at:y).						(aux = unJugador ) ifTrue: [ 										cj:= cj + 1. 										(cj ~= 4)ifTrue: [ 											mov:= mov + 1 ].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].															]. "fin de las filas entremedias"										]. "fin de la suma"				j:=2.				i:= i + 1.				 ]. "fin de las filas"		]. "fin del si 0"		"de 4 a 2"		(mov ==0 ) ifTrue: [ 			i:= 1. j:=4. c:=0. cj:=0. 			[ i < 5 ] whileTrue: [ 					c:=0. cj:=0.					[ j > 1 ] whileTrue: [ 					aux:= ((arreglo at:i)at:j).					(aux = unJugador ) ifTrue: [ 								cj:= cj +1.						 ].					(aux = 0) ifTrue: [ 								c:= c +1.					 	].												j:= j - 1.				 ]."fin columnas" 			((c+ cj) = 3) ifTrue:[					(i = 1) ifTrue: [ 						x:=i.						x:= x + 1.						aux:= ((arreglo at:x)at:j).						(aux = unJugador) ifTrue: [ 										cj:= cj +1 .										(cj ~= 4) ifTrue: [ 											mov:= mov +1].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].						 ]. "fin de la fila 1"					(i = 4) ifTrue: [  						x:= i.						x:= x-1 .						aux:= ((arreglo at:x)at:j).						(aux = unJugador) ifTrue: [ 										cj:= cj +1 .										(cj ~= 4) ifTrue: [ 											mov:= mov +1].										 ]													ifFalse:[mov := 0].															(aux = 0) ifTrue:[							mov:= mov + 1].												]. "fin de la fila 2"					((i > 4) & (i < 1)) ifTrue: [ 						x1:= i.						x2:= i.						x1:= x1 + 1.						x2:= x2 - 1.						aux:= ((arreglo at:x1)at:j).						(aux = unJugador ) ifTrue: [ 										cj:= cj + 1. 										(cj ~= 4)ifTrue: [ 											mov:= mov + 1 ].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].								aux:= ((arreglo at:x2)at:j).						(aux = unJugador ) ifTrue: [ 										cj:= cj + 1. 										(cj ~= 4)ifTrue: [ 											mov:= mov + 1 ].										 ].						(aux = 0) ifTrue:[							mov:= mov + 1].															]. "fin de las filas entremedias"				]. "el fin si de la suma"							j:=4.			i:= i + 1.			]. "fin de las filas" 		 ]. "fin del si 0"].	Transcript show: mov.Transcript show: c.Transcript show: cj.Transcript show: aux.