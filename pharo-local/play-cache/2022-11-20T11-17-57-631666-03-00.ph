|arreglo arr c cj movimiento band x x1 x2 i j unJugador mov aux| arreglo:= Array new: 4.arreglo at:1 put:(Array new:4).arreglo at:2 put:(Array new:4).arreglo at:3 put:(Array new:4).arreglo at:4 put:(Array new:4).(arreglo at:1) at:1 put: 3.(arreglo at:1) at:2 put: 2.(arreglo at:1) at:3 put: 2.(arreglo at:1) at:4 put: 0.(arreglo at:2) at:1 put: 0.(arreglo at:2) at:2 put: 1.(arreglo at:2) at:3 put: 2.(arreglo at:2) at:4 put: 0.(arreglo at:3) at:1 put: 0.(arreglo at:3) at:2 put: 1.(arreglo at:3) at:3 put: 2.(arreglo at:3) at:4 put: 0.(arreglo at:4) at:1 put: 0.(arreglo at:4) at:3 put: 1.(arreglo at:4) at:2 put: 1.(arreglo at:4) at:4 put: 4.movimiento:= 'H'.unJugador := 2.c:=0. cj:=0.i:=1. j:=1.mov:=0.(movimiento ==  'H') ifTrue:[	[ i < 5 ] whileTrue:[		[j < 4 ] whileTrue:  [ 				aux:= (((arreglo at:i)at:j)).							(aux == 0) ifTrue:[								c:= c + 1].						(aux == unJugador) ifTrue:[								cj:= cj + 1].						j:=j + 1.		 ].			((c +cj)=3) ifTrue: [  					(i == 1 ) ifTrue: [ 						x:= i.						x:= x + 1.						aux:= (((arreglo at:x)at:j)).						(aux == unJugador ) ifTrue: [ 									cj:= c + 1.									(cj == 4) ifTrue:[													c:=0]												ifFalse:[													mov:= mov + 1] ].						(aux == 0) ifTrue: [ 									mov:= mov + 1 ]										ifFalse:[c:=0].						 ]. "fin 1ra fila"					(i == 4) ifTrue: [ 						x:=i.						x:= x - 1.						aux:= (((arreglo at:x)at:j)).						(aux == unJugador )ifTrue: [ 									cj:= cj + 1.									(cj == 4) ifTrue:[												c:=0]												ifFalse:[												mov:= mov + 1] ].						(aux == 0) ifTrue: [ 							mov:= mov + 1 ]										ifFalse: [ c:=0 ].										 ]. "fin 4ta fila"					((i>4) & (i <1 )) ifTrue: [ 						x1:= i. 						x2:= i.						x1 := i + 1.						x2:= i - 1.						aux:= (((arreglo at:x1)at:j)).						(aux == unJugador )ifTrue: [ 									cj:= cj + 1.									(cj == 4) ifTrue:[												c:=0]												ifFalse:[												mov:= mov + 1] ].						(aux == 0) ifTrue: [ 							mov:= mov + 1 ]										ifFalse: [ c:=0 ].								 ]. "fin de las filas entremedias"								]. "el si de la suma"		i:= i +1.		j:=1.		c:=0. cj:=0.				]. "el mientras de las filas"			(mov == 0) ifTrue:[		i:=1.			c:=0. cj:=0. j:=2.			[ i < 5 ] whileTrue: [ 				[ j  <=4  ] whileTrue: [ 					aux:= (((arreglo at:i)at:j)).						(aux == 0) ifTrue:[								c:= c + 1].						(aux == unJugador) ifTrue:[								cj:= cj + 1].											j:= j + 1.				 ]. "fin  columnas"				((c +cj)=3) ifTrue: [  					(i == 1 ) ifTrue: [ 						x:= i.						x:= x + 1.						aux:= (((arreglo at:x)at:j)).						(aux == unJugador ) ifTrue: [ 									cj:= c + 1.									(cj == 4) ifTrue:[													c:=0]												ifFalse:[													mov:= mov + 1] ].						(aux == 0) ifTrue: [ 									mov:= mov + 1 ]										ifFalse:[c:=0].						 ]. "fin 1ra fila"					(i == 4) ifTrue: [ 						x:=i.						x:= x - 1.						aux:= (((arreglo at:x)at:j)).						(aux == unJugador )ifTrue: [ 									cj:= cj + 1.									(cj == 4) ifTrue:[												c:=0]												ifFalse:[												mov:= mov + 1] ].						(aux == 0) ifTrue: [ 							mov:= mov + 1 ]										ifFalse: [ c:=0 ].										 ]. "fin 4ta fila"					((i>4) & (i <1 )) ifTrue: [ 						x1:= i. 						x2:= i.						x1 := i + 1.						x2:= i - 1.						aux:= (((arreglo at:x1)at:j)).						(aux == unJugador )ifTrue: [ 									cj:= cj + 1.									(cj == 4) ifTrue:[												c:=0]												ifFalse:[												mov:= mov + 1] ].						(aux == 0) ifTrue: [ 							mov:= mov + 1 ]										ifFalse: [ c:=0 ].								 ]. "fin de las filas entremedias"								]. "el si de la suma"				i:= i +1.				j:=1.				c:=0. cj:=0.								 ]. "fin filas"						].				].Transcript show: c.Transcript show: cj.